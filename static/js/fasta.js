// Generated by CoffeeScript 1.12.6
(function() {
  var Fasta, extend, st;

  st = require("msa-seqtools");

  extend = require("./extend");

 define(function (require, exports, module) {
  module.exports = Fasta = {
    getMeta: st.getMeta,
    extend: function(metaParser) {
      var customFasta;
      customFasta = extend(Fasta);
      Fasta.getMeta = metaParser;
      return customFasta;
    },
    parse: function(text) {
      var currentSeq, getMeta, i, id, label, len, line, obj, seqs;
      seqs = [];
      if (!text || text.length === 0) {
        return [];
      }
      if (Object.prototype.toString.call(text) !== '[object Array]') {
        text = text.split("\n");
      }
      getMeta = Fasta.getMeta;
      for (i = 0, len = text.length; i < len; i++) {
        line = text[i];
        if (line[0] === ">" || line[0] === ";") {
          label = line.slice(1);
          obj = getMeta(label);
          label = obj.name;
          id = obj.id || seqs.length;
          currentSeq = new st.model("", obj.name, id);
          currentSeq.ids = obj.ids || {};
          currentSeq.details = obj.details || {};
          seqs.push(currentSeq);
        } else {
          currentSeq.seq += line;
        }
      }
      return seqs;
    },
    write: function(seqs, access) {
      var i, len, seq, text;
      text = "";
      for (i = 0, len = seqs.length; i < len; i++) {
        seq = seqs[i];
        if (access != null) {
          seq = access(seq);
        }
        text += ">" + seq.name + "\n";
        text += (st.splitNChars(seq.seq, 80)).join("\n");
        text += "\n";
      }
      return text;
    }
  };
});

}).call(this);
